generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime? @map("email_verified")
  image         String?

  bookings Booking[]
  accounts Account[]

  @@map("user")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model verificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
  @@map("verification_tokens")
}

model Barbershop {
  id        String @id @default(cuid())
  name      String
  address   String
  image_url String

  services Service[]
  bookings Booking[]

  @@map("barbershop")
}

model Service {
  id            String     @id @default(uuid())
  name          String
  price         Int
  description   String
  image_url     String
  barbershop_id String
  barbershop    Barbershop @relation(fields: [barbershop_id], references: [id])

  bookings Booking[]

  @@map("service")
}

model Booking {
  id            String     @id @default(cuid())
  user_id       String
  user          User       @relation(fields: [user_id], references: [id])
  service_id    String
  service       Service    @relation(fields: [service_id], references: [id])
  date          DateTime
  status        String
  barbershop_id String
  barbershop    Barbershop @relation(fields: [barbershop_id], references: [id])

  @@map("booking")
}
